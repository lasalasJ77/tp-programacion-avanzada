/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import DAO.DAOException;
import DAO.DAOFactory;
import DAO.DAOFactoryException;
import DAO.GenericDAO;
import DAO.StudentDAOSQL;
import DAO.StudentDAOTXT;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.io.File;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import model.Student;
import enums.CrudAction;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *
 * @author alepr
 */
public class StudentGUI extends javax.swing.JFrame {
    
    private GenericDAO<Student, Integer> dao;
    private StudentDAOSQL mysqlDAO;
    private StudentDAOTXT txtDAO;
    private final StudentTableModel studentModel;

    /**
     * Creates new form AlumnosForm
     */
    public StudentGUI() {
        initComponents();
        
        setTitle("Gestión de Alumnos");
        setLocationRelativeTo(null);
        
        panelMySQL.setVisible(false);
        
        studentModel = new StudentTableModel();
        tableStudents.setModel(studentModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jComboBox1 = new javax.swing.JComboBox<>();
        tableScroll = new javax.swing.JScrollPane();
        tableStudents = new javax.swing.JTable();
        panelMySQL = new javax.swing.JPanel();
        connectionMySQL = new javax.swing.JLabel();
        hostInput = new javax.swing.JTextField();
        hostLabel = new javax.swing.JLabel();
        userLabel = new javax.swing.JLabel();
        userInput = new javax.swing.JTextField();
        passwordLabel = new javax.swing.JLabel();
        portLabel = new javax.swing.JLabel();
        portInput = new javax.swing.JTextField();
        buttonConnect = new javax.swing.JButton();
        passwordInput = new javax.swing.JPasswordField();
        panelTXT = new javax.swing.JPanel();
        locationTXTLabel = new javax.swing.JLabel();
        locationTXTInput = new javax.swing.JTextField();
        buttonTXT = new javax.swing.JButton();
        repositoryPanel = new javax.swing.JPanel();
        repositoryLabel = new javax.swing.JLabel();
        repositorySelect = new javax.swing.JComboBox<>();
        panelActions = new javax.swing.JPanel();
        buttonCreate = new javax.swing.JButton();
        buttonUpdate = new javax.swing.JButton();
        buttonDelete = new javax.swing.JButton();
        buttonSeeDetail = new javax.swing.JButton();
        buttonSeeDeleted = new javax.swing.JCheckBox();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tableStudents.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "DNI", "Apellido", "Nombre", "Estado"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tableStudents.getTableHeader().setReorderingAllowed(false);
        tableScroll.setViewportView(tableStudents);

        connectionMySQL.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        connectionMySQL.setText("Configuración MySQL");

        hostInput.setToolTipText("Inserte el host de MySQL");
        hostInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hostInputActionPerformed(evt);
            }
        });

        hostLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        hostLabel.setText("Host:");

        userLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        userLabel.setText("Usuario:");

        userInput.setToolTipText("Inserte el host de MySQL");
        userInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userInputActionPerformed(evt);
            }
        });

        passwordLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        passwordLabel.setText("Clave:");

        portLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        portLabel.setText("Puerto:");

        portInput.setToolTipText("Inserte el host de MySQL");
        portInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                portInputActionPerformed(evt);
            }
        });

        buttonConnect.setText("Conectar");
        buttonConnect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConnectActionPerformed(evt);
            }
        });

        passwordInput.setToolTipText("Ingrese su contraseña");
        passwordInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passwordInputActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelMySQLLayout = new javax.swing.GroupLayout(panelMySQL);
        panelMySQL.setLayout(panelMySQLLayout);
        panelMySQLLayout.setHorizontalGroup(
            panelMySQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMySQLLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelMySQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMySQLLayout.createSequentialGroup()
                        .addComponent(connectionMySQL)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelMySQLLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(panelMySQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(panelMySQLLayout.createSequentialGroup()
                                .addComponent(userLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(userInput, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelMySQLLayout.createSequentialGroup()
                                .addComponent(hostLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(hostInput, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(panelMySQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(panelMySQLLayout.createSequentialGroup()
                                .addComponent(portLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(portInput, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(panelMySQLLayout.createSequentialGroup()
                                .addComponent(passwordLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(passwordInput)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonConnect)))
                .addContainerGap())
        );
        panelMySQLLayout.setVerticalGroup(
            panelMySQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelMySQLLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(connectionMySQL)
                .addGap(5, 5, 5)
                .addGroup(panelMySQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelMySQLLayout.createSequentialGroup()
                        .addGroup(panelMySQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(hostLabel)
                            .addComponent(hostInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelMySQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(userLabel)
                            .addComponent(userInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(panelMySQLLayout.createSequentialGroup()
                        .addGroup(panelMySQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(portLabel)
                            .addComponent(portInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelMySQLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(passwordLabel)
                            .addComponent(buttonConnect)
                            .addComponent(passwordInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(10, 10, 10))
        );

        locationTXTLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        locationTXTLabel.setText("Ubicación TXT");

        locationTXTInput.setToolTipText("Ingrese la ubicación donde guardar el archivo");
        locationTXTInput.setEnabled(false);
        locationTXTInput.setMargin(new java.awt.Insets(2, 6, 1, 6));
        locationTXTInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationTXTInputActionPerformed(evt);
            }
        });

        buttonTXT.setText("...");
        buttonTXT.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        buttonTXT.setMargin(new java.awt.Insets(2, 14, 2, 14));
        buttonTXT.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonTXTActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelTXTLayout = new javax.swing.GroupLayout(panelTXT);
        panelTXT.setLayout(panelTXTLayout);
        panelTXTLayout.setHorizontalGroup(
            panelTXTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTXTLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelTXTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelTXTLayout.createSequentialGroup()
                        .addComponent(locationTXTLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(panelTXTLayout.createSequentialGroup()
                        .addComponent(locationTXTInput)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(buttonTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelTXTLayout.setVerticalGroup(
            panelTXTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelTXTLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(locationTXTLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelTXTLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(locationTXTInput, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonTXT, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        repositoryLabel.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        repositoryLabel.setText("Repositorio");

        repositorySelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TXT", "MySQL" }));
        repositorySelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                repositorySelectActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout repositoryPanelLayout = new javax.swing.GroupLayout(repositoryPanel);
        repositoryPanel.setLayout(repositoryPanelLayout);
        repositoryPanelLayout.setHorizontalGroup(
            repositoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(repositoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(repositoryLabel)
                .addGap(18, 18, 18)
                .addComponent(repositorySelect, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        repositoryPanelLayout.setVerticalGroup(
            repositoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(repositoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(repositoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(repositoryLabel)
                    .addComponent(repositorySelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        buttonCreate.setText("Crear");
        buttonCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCreateActionPerformed(evt);
            }
        });

        buttonUpdate.setText("Modificar");
        buttonUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUpdateActionPerformed(evt);
            }
        });

        buttonDelete.setText("Eliminar");
        buttonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeleteActionPerformed(evt);
            }
        });

        buttonSeeDetail.setText("Ver detalle");
        buttonSeeDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSeeDetailActionPerformed(evt);
            }
        });

        buttonSeeDeleted.setText("Ver eliminados");
        buttonSeeDeleted.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSeeDeletedActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelActionsLayout = new javax.swing.GroupLayout(panelActions);
        panelActions.setLayout(panelActionsLayout);
        panelActionsLayout.setHorizontalGroup(
            panelActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelActionsLayout.createSequentialGroup()
                .addContainerGap(42, Short.MAX_VALUE)
                .addGroup(panelActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonSeeDeleted)
                    .addGroup(panelActionsLayout.createSequentialGroup()
                        .addComponent(buttonCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(buttonSeeDetail, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(43, Short.MAX_VALUE))
        );
        panelActionsLayout.setVerticalGroup(
            panelActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelActionsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelActionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCreate)
                    .addComponent(buttonUpdate)
                    .addComponent(buttonDelete)
                    .addComponent(buttonSeeDetail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonSeeDeleted)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(76, 76, 76)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(repositoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelTXT, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tableScroll, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelActions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelMySQL, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(81, 81, 81))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(repositoryPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(panelTXT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(panelMySQL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15)
                .addComponent(panelActions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tableScroll, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void hostInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hostInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_hostInputActionPerformed

    private void portInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_portInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_portInputActionPerformed

    private void userInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_userInputActionPerformed

    private void buttonConnectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConnectActionPerformed
        Map<String, Object> config = new HashMap<>();
        config.put(DAOFactory.TYPE_DAO, DAOFactory.TYPE_DAO_SQL);
        config.put(DAOFactory.HOST, hostInput.getText());
        config.put(DAOFactory.PORT, portInput.getText());
        config.put(DAOFactory.USER, userInput.getText());
        config.put(DAOFactory.PWD, passwordInput.getText());
        
        try {
            mysqlDAO = (StudentDAOSQL) DAOFactory.createDao(config);
            dao = mysqlDAO;
            JOptionPane.showMessageDialog(this, "Se ha conectado de forma exitosa", "Conexión", JOptionPane.INFORMATION_MESSAGE);
            setStudents();
        } catch (DAOFactoryException | DAOException ex) {
            Logger.getLogger(StudentGUI.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error en el DAO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buttonConnectActionPerformed

    private void buttonTXTActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonTXTActionPerformed
        JFileChooser chooser = new JFileChooser();
        chooser.setFileFilter(new FileNameExtensionFilter(null, "txt"));
        int resp = chooser.showOpenDialog(this);
        if (resp != JFileChooser.APPROVE_OPTION) {
            return;
        }
        
        File file = chooser.getSelectedFile();
        locationTXTInput.setText(file.getAbsolutePath());
        
        Map<String, Object> config = new HashMap<>();
        config.put(DAOFactory.TYPE_DAO, DAOFactory.TYPE_DAO_TXT);
        config.put(DAOFactory.FILENAME, file.getAbsolutePath());
        
        try {
            txtDAO = (StudentDAOTXT)DAOFactory.createDao(config);
            dao = txtDAO;
            setStudents();
        } catch (DAOFactoryException | DAOException ex) {
            Logger.getLogger(StudentGUI.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error en el DAO", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_buttonTXTActionPerformed

    private void locationTXTInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationTXTInputActionPerformed
        
    }//GEN-LAST:event_locationTXTInputActionPerformed

    private void buttonCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCreateActionPerformed
        try {
            Student student = openDialog(CrudAction.CREATE);
            dao.create(student);
            
            JOptionPane.showMessageDialog(this, "Se ha creado el alumno de forma exitosa", "Creación", JOptionPane.INFORMATION_MESSAGE);
            setStudents();
        } catch (DAOException ex) {
           Logger.getLogger(StudentGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonCreateActionPerformed

    private void repositorySelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_repositorySelectActionPerformed
        panelTXT.setVisible(repositorySelect.getSelectedIndex() == 0);
        panelMySQL.setVisible(repositorySelect.getSelectedIndex() == 1);
        
        if (repositorySelect.getSelectedIndex() == 0) {
            if (txtDAO != null) {
                try {
                    dao = txtDAO;
                    setStudents();   
                } catch (DAOException ex) {
                    Logger.getLogger(StudentGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        } else if (mysqlDAO != null) {
            try {
                dao = mysqlDAO;
                setStudents();
            } catch (DAOException ex) {
                Logger.getLogger(StudentGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_repositorySelectActionPerformed

    private void buttonSeeDeletedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSeeDeletedActionPerformed
        try {
            setStudents();
        } catch (DAOException ex) {
            Logger.getLogger(StudentGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonSeeDeletedActionPerformed

    private void passwordInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passwordInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passwordInputActionPerformed

    private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUpdateActionPerformed
        try {
            Student student = openDialog(CrudAction.UPDATE);
            dao.update(student);
            
            JOptionPane.showMessageDialog(this, "Se ha actualizado el alumno de forma exitosa", "Creación", JOptionPane.INFORMATION_MESSAGE);
            setStudents();
        } catch (DAOException ex) {
           Logger.getLogger(StudentGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonUpdateActionPerformed

    private void buttonSeeDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSeeDetailActionPerformed
        openDialog(CrudAction.READ);    
    }//GEN-LAST:event_buttonSeeDetailActionPerformed

    private void buttonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeleteActionPerformed
        try {
            int selectedRow = tableStudents.getSelectedRow();
            if (selectedRow < 0) {
                // JOptionPane.showMessageDialog(repoComboBox, evt, title, HEIGHT);
                return;
            }
            Student studentSelected = studentModel.getStudents().get(selectedRow);
            
            int resp = JOptionPane.showConfirmDialog(this, "¿Está seguro de eliminar el alumno?", "Eliminar", 
                    JOptionPane.OK_OPTION, 
                    JOptionPane.QUESTION_MESSAGE);
            
            if (resp==JOptionPane.YES_OPTION) {
                dao.delete(studentSelected.getDni());
            }
            
            JOptionPane.showMessageDialog(this, "Se ha eliminado el alumno de forma exitosa", "Creación", JOptionPane.INFORMATION_MESSAGE);
            setStudents();
        } catch (DAOException ex) {
            Logger.getLogger(StudentGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StudentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StudentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StudentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StudentGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StudentGUI().setVisible(true);
            }
        });
    }
    
    private Student openDialog(CrudAction action) {
        Student studentSelected = null;
        if (action != CrudAction.CREATE) {
            int selectedRow = tableStudents.getSelectedRow();
            studentSelected = studentModel.getStudents().get(selectedRow);
        }
        
        StudentForm dialog = new StudentForm(this, true, action, studentSelected);
        dialog.setVisible(true);
        
        return dialog.getStudent();
    }
    
    private void setStudents() throws DAOException {
        List<Student> students = dao.findAll(buttonSeeDeleted.isSelected());
        
        studentModel.setStudents(students);
        studentModel.fireTableDataChanged();

        buttonDelete.setEnabled(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonConnect;
    private javax.swing.JButton buttonCreate;
    private javax.swing.JButton buttonDelete;
    private javax.swing.JCheckBox buttonSeeDeleted;
    private javax.swing.JButton buttonSeeDetail;
    private javax.swing.JButton buttonTXT;
    private javax.swing.JButton buttonUpdate;
    private javax.swing.JLabel connectionMySQL;
    private javax.swing.JTextField hostInput;
    private javax.swing.JLabel hostLabel;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JTextField locationTXTInput;
    private javax.swing.JLabel locationTXTLabel;
    private javax.swing.JPanel panelActions;
    private javax.swing.JPanel panelMySQL;
    private javax.swing.JPanel panelTXT;
    private javax.swing.JPasswordField passwordInput;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JTextField portInput;
    private javax.swing.JLabel portLabel;
    private javax.swing.JLabel repositoryLabel;
    private javax.swing.JPanel repositoryPanel;
    private javax.swing.JComboBox<String> repositorySelect;
    private javax.swing.JScrollPane tableScroll;
    private javax.swing.JTable tableStudents;
    private javax.swing.JTextField userInput;
    private javax.swing.JLabel userLabel;
    // End of variables declaration//GEN-END:variables
}
